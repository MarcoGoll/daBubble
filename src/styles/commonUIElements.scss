@import './variables';
@import './mixin';

// Standard Card
.mat-mdc-card.mdc-card{
    border-radius: $stdRadiusCard;
    padding: $stdRadiusCard;
}

// Standard Input - general + hover => to use set class="std-form-field" at <mat-form-field>-Element
.std-form-field
{
    .mdc-text-field--filled.mat-mdc-text-field-wrapper.mdc-text-field{
        background-color: $clrHighlight1;
        height: $stdHeightInput;
        border: 1px solid transparent;

        .mat-mdc-form-field-focus-overlay{
            height: inherit;
        }

        .mat-mdc-form-field-flex{
            height: inherit;
            
            .mat-mdc-form-field-infix{
                height: inherit;
            }
        }

        &:hover{
            border: 1px solid $clrBaseDark !important;
        }
    }

    .mdc-text-field{
        border-radius: $stdRadiusInput;
        
        .mat-mdc-form-field-flex{
            padding-left: 8px;
        }
    }
    
    .mdc-line-ripple {
        display: none;
      }
} 

// Standard Input - focused/active
.std-form-field.mat-focused {
    .mdc-text-field--filled.mat-mdc-text-field-wrapper.mdc-text-field{
        border: 1px solid $clrHighlight2 !important;
    }
}

// BTN's
.primaryBtn, .secondaryBtn{
    height: 48px;
    border-radius: 25px;
    padding: 12px 25px;
    font-weight: 700;
}

.primaryBtn{
    background-color: $clrHighlight2;
    color: $clrBaseBright;

    &:hover{
        background-color: $clrHighlight2Brighter1;
    }
}

.secondaryBtn.mat-mdc-outlined-button:not(:disabled){
    background-color: $clrBaseBright;
    color: $clrHighlight2;
    border: 1px solid $clrHighlight2;

    &:hover{
        background-color: $clrHighlight2Brighter2;
        color: $clrBaseBright;
    }

    &:active{
        background-color: $clrHighlight2;
        color: $clrBaseBright;
    }
}

$size:42px;
.icon-button{
    transition: $stdTransition;
    --mat-icon-button-touch-target-display: none;
    @include setFlex();        
    padding: 0;
    height: $size;
    width: $size;
    min-width: $size;
    min-height: $size;
    max-width: $size;
    max-height: $size;
   
    &:hover {
        background-color: $clrHighlight1;
        svg{
            path{
                fill: $clrHighlight2Brighter2;
            };
        }
    }
}

::ng-deep .icon-button .mat-mdc-button-touch-target { //::ng-deep is deprecated find other solution
    height: $size ;
    width: $size ;
  }

// Seperator
.horizontal-seperator-container{
    @include setFlex($gap: 16px);
    .horizontal-seperator{
        flex: 1;
        height: 1px;
        border: 1px solid $clrBaseDarkTransparent02;
    }
}

//Snackbar
.snackbar-success.mat-mdc-snack-bar-container .mdc-snackbar__surface{
    background-color: #41a145; 
    color: white;
    font-weight: bold;
    text-align: center;
}

.snackbar-error.mat-mdc-snack-bar-container .mdc-snackbar__surface{
    background-color: #f44336;
    color: white;
    font-weight: bold;
    text-align: center;
}

.snackbar-info.mat-mdc-snack-bar-container .mdc-snackbar__surface{
    background-color: #3652f4;
    color: white;
    font-weight: bold;
    text-align: center;
}

.snackbar-warn.mat-mdc-snack-bar-container .mdc-snackbar__surface{
    background-color: #918e05;
    color: white;
    font-weight: bold;
    text-align: center;
}

.snackbar-default.mat-mdc-snack-bar-container .mdc-snackbar__surface{
    background-color: rgba(0, 0, 0, 0.2);
    color: white;
    font-weight: bold;
    text-align: center;
}

